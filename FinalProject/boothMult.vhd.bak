library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity boothMult is
	port(
		-- Inputs
		M, Q, A: in std_logic_vector(3 downto 0); -- 4 bit Multiplicand
		Idx: in integer range 0 to 9;
		N: in integer range 0 to 9;
		-- Outputs
		Output: out std_logic_vector(7 downto 0); --8 bit
		Carry: in std_logic; --1 bit		
	);
end boothMult;

architecture structure of boothMult is
------------------- 00. COMPONENT DECLARATION -------------------
	component adder4
		port(
			A,B: in std_logic_vector(3 downto 0);
			Ci: in std_logic; -- Inputs
			S: out std_logic_vector(3 downto 0);
			Co: out std_logic); -- Output
		);
	end component;

	component subtractor4
		port(
			A,B: in std_logic_vector(5 downto 0);
			Bi: in std_logic; -- Inputs
			D: out std_logic_vector(5 downto 0);
			Bo: out std_logic); -- Output
		);
	end component;

	component ASR
		port(
			signal toShift     : in std_logic_vector(3 downto 0);
  			signal unsignedOut : out unsigned(3 downto 0)
		);
	end component;

	component twosComp
		port(
			A : in std_logic_vector(n+(n-1)*2 downto 0);
			Z : out std_logic_vector(n+(n-1)*2 downto 0)
		);
	end component;


	------------------- 01. SIGNAL/STATE DEFINITION -------------------
	signal state: integer range 7 to 1:= 0;
	signal adderCarry, adderCO, subtractorCarry, subtractorCO: bit;
	singal adderResult, subtractorResult, shiftResult: std_logic_vector(3 downto 0);
	
	------------------- 02. LOGIC IMPLEMENTATION -------------------
	begin
		ADDER: adder4 port map (A, M, adderCarry, adderResult, adderCO);
		SUBTRACTOR: subtractor4 port map (A, M, subtractorCarry, subtractorResult, subtractorCO);
		RSHIFTADD: ASR port map (adderResult, shiftResult);
		RSHIFTSUB: ASR port map (subtractorResult, shiftResult);

	-- COUNT1: fully_synchronous_counter port map (LD, CL, P, T, CLOCK, Din1, Carry1, Qout1);
	-- COUNT2: fully_synchronous_counter port map (LD, CL, P, Carry1, CLOCK, Din2, Carry2, Qout2);
	-- Count <= to_integer(Qout2 & Qout1);

end structure;